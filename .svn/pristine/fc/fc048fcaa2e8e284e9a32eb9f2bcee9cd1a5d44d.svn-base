<?php
namespace app\common\model;

use think\Db;
use think\Session;

use app\common\model\UserModel;

class CommentModel extends BaseModel
{
    protected $table = 'comment';

    public function getCommentPage($page,$pageSize,$condition = [],$is_count = false, $order = '')
    {
        $this->alias('comment')
            ->field('comment.*,user.user_name');
        $join = [
            ['user user', 'user.user_id=comment.user_id', 'LEFT'],
        ];

        if (!empty($order)) {
            $this->order($order);
        }
        if (!empty($condition)) {
            $this->where($condition);
        }
        if($is_count){
            return $this->page($page,$pageSize)->count();
        }
        return $this->join($join)->page($page,$pageSize)->select();
    }

    /**
     * 获取多条数据信息
     * @param array $condition
     * @param string $order
     * @return array
     */
    public function getCommentInfo($condition=[],$order=''){

        $this->alias('comment')
            ->field('comment.*,user.user_name,user.header_img');
        $join = [
            ['user user', 'user.user_id=comment.user_id', 'LEFT'],
        ];
        if($condition){
            $this->where($condition);
        }

        if($order){
            $this->order($order);
        }

        return $this->join($join)->select();

    }

//    public function getComment($condition=[]){
//        if($condition){
//            $this->where($condition);
//        }
//        return $this->alias('comment')
//            ->field('comment.*,store.store_name,store.discount,project.project_name,user.header_img')
//            ->join('store store','store.store_id = comment.store_id','LEFT')
//            ->join('project project','project.project_id = comment.project_id','LEFT')
//            ->join('user user','user.user_no = comment.user_no','LEFT')
//            ->order('comment.add_ts desc')
//            ->select();
//    }
//
//    public function getCommentCount($condition=[]){
//        if($condition){
//            $this->where($condition);
//        }
//        return $this->alias('comment')
//            ->field('comment.*,store.store_name,store.discount,project.project_name,user.header_img')
//            ->join('store store','store.store_id = comment.store_id','LEFT')
//            ->join('project project','project.project_id = comment.project_id','LEFT')
//            ->join('user user','user.user_no = comment.user_no','LEFT')
//            ->order('comment.add_ts desc')
//            ->count();
//    }

    public static function getOneMomentComment($mid)
    {
        //mid moment说说的ID
        $uid = Session::get('uid');
        $comments = CommentModel::all(['moment_id'=>$mid, 'status'=>1]);
        $data = array();
        foreach ($comments as $key => $value) {
            //寻找他的评论人和被评论人等信息
            $data[$key]['id'] = $value['id'];
            $data[$key]['comment_id'] = $value['comment_id'];
            $data[$key]['user_id'] = $value['user_id'];
            // $data[$key]['content'] = $this->emoji_decode($value['content']);

            $userObj = UserModel::get($value['user_id']);
            $data[$key]['user_name'] = $userObj['user_name'];
            if ($value['comment_id']) {
                $useredObj = UserModel::get($value['usered_id']);
                $data[$key]['usered_name'] = $useredObj['user_name'];
            }
        }
        // $obj = Db::table('comment')
        //     ->where('comment.moment_id', $mid)
        //     // ->where('comment.comment_id', 0)
        //     ->where('comment.status', 1)
        //     ->join('user', 'user.user_id = comment.user_id')
        //     ->field('comment.id, user.user_id, user.user_name, user.header_img, comment.content, comment.add_ts')
        //     ->select();
        return $data;
    }

    public static function getOneActivityComment($aid)
    {
        //aid moment说说的ID
        $uid = Session::get('uid');
        $obj = Db::table('comment')
            ->where('comment.activity_id', $aid)
            ->where('comment.comment_id', 0)
            ->where('comment.status', 1)
            ->join('user', 'user.user_id = comment.user_id')
            ->field('comment.id, user.user_name, user.header_img, comment.content, comment.add_ts')
            ->select();
        return $obj;
    }

    public static function getSonComments($comment_id)
    {
        return 2;
    }

    //新的评论
    public static function mewComment($uid, $mid, $msg, $cid=0, $type=0)
    {
        $cObj = MomentModel::get($mid);
        $flight = new CommentModel();
        $flight->user_id = $uid;
        if ($cid) {
            $flight->comment_id = $cid;
        }
        if ($cid) {
            $flight->usered_id = CommentModel::get($cid)['user_id'];
        } else {
            $flight->usered_id = $cObj['user_id'];
        }
        $flight->content = addslashes($msg);
        $flight->add_ts = time();
        if ($type == 0)
            $flight->moment_id = $mid;
        else
            $flight->activity_id = $mid;
        $flight->save();
        return $flight->id;
    }


    //获取用户的所有评论
    public static function getUserComments($uid, $type=0)
    {
        if (!$type) {
            //查用户的说说评论
            $cobj = CommentModel::where(['c.user_id'=>$uid, 'c.status'=>1])
                ->alias('c')
                ->order('c.add_ts desc')
                ->join('moment m', 'm.moment_id = c.moment_id', 'right')
                ->field('c.moment_id, m.img, m.content as mcontent, c.content, c.add_ts')
                ->select();
        } else {
            $cobj = CommentModel::where(['c.user_id'=>$uid, 'c.status'=>1])

                ->alias('c')
                ->order('c.add_ts desc')
                ->join('activity a', 'a.activity_id = c.activity_id', 'right')
                ->field('c.activity_id, c.content, a.img, a.activity_name, c.add_ts')
                ->select();
        }
        return $cobj;
    }


    private function emoji_decode($str) {
        $strDecode = preg_replace_callback('|\[\[EMOJI:(.*?)\]\]|', function($matches){  
            return rawurldecode($matches[1]);
        }, $str);

        return $strDecode;
    }
}
