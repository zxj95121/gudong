<?php
namespace app\common\model;
/**
 * 发布状态表
 * Class MomentModel
 * @package app\common\model
 */

use app\common\model\UserModel;
use app\common\model\ThumbModel;
use app\common\model\CommentModel;
use app\common\model\CollectionModel;
use app\common\model\UserSubModel;

use app\common\service\Wechat;

use think\Session;

class MomentModel extends BaseModel
{
    protected $table = 'moment';

    public function getMomentPage($page,$pageSize,$condition = [],$is_count = false, $order = '')
    {
        $this->alias('moment')
            ->field('moment.*,user.user_name');
        $join = [
            ['user user', 'user.user_id=moment.user_id', 'LEFT'],
        ];

        if (!empty($order)) {
            $this->order($order);
        }
        if (!empty($condition)) {
            $this->where($condition);
        }
        if($is_count){
            return $this->page($page,$pageSize)->count();
        }
        return $this->join($join)->page($page,$pageSize)->select();
    }

    /**
     * 获取多条数据信息
     * @param array $condition
     * @param string $order
     * @return array
     */
    public function getMomentInfo($condition=[],$order=''){

        $this->alias('moment')
            ->field('moment.*,user.user_name');
        $join = [
            ['user user', 'user.user_id=moment.user_id', 'LEFT'],
        ];
        if($condition){
            $this->where($condition);
        }

        if($order){
            $this->order($order);
        }

        return $this->join($join)->column('*');

    }


    //获取某条说说详情
    public static function getMomentDetail($mid, $comment_limit=0)
    {
        $obj = MomentModel::get($mid)->toArray();
        $data =substr(stripslashes($obj['img']), 1, -1);
        $data = explode(',', $data);

        foreach ($data as $value) {
            $obj['images'][] = substr($value, 1, -1);
        }
        $obj['img'] = substr($data[0], 1, -1);
        // $obj['add_ts'] = date('Y-m-d H:i:s', $obj['add_ts']);
        $obj['add_ts_pre'] = $obj['add_ts'];
        $obj['add_ts'] = Wechat::timetostr($obj['add_ts']);

        //获取这条说说的所有评论
        $obj['comments'] = CommentModel::getOneMomentComment($mid);

        // $obj['comments'] = array_slice($obj['comments'], 0, 3);

        //用户信息
        $userObj = UserModel::get($obj['user_id']);
        $obj['headimg'] = $userObj->header_img;
        $obj['name'] = $userObj->user_name;

        //再去获取说说的点赞，评论，收藏的数量
        $obj['thumb_num'] = ThumbModel::where(['moment_id'=>$obj['moment_id'], 'status'=>1])
            ->sum('times');
        $obj['thumb_num'] = $obj['thumb_num'] ? $obj['thumb_num'] : 0;

        $obj['comment_num'] = CommentModel::where(['moment_id'=>$obj['moment_id'], 'status'=>1, /*'comment_id'=>0*/])//状态1，说说对应，comment_id必须是0
            ->count();

        $obj['collect_num'] = CollectionModel::where(['moment_id'=>$obj['moment_id'], 'status'=>1])
            ->count();

        //当前用户是否已经点赞或是否已经收藏或者是否已经关注
        $obj['is_thumb'] = ThumbModel::where(['moment_id'=>$mid, 'user_id'=>Session::get('uid'), 'status'=>1])
            ->count();

        $obj['is_collect'] = CollectionModel::where(['moment_id'=>$mid, 'user_id'=>Session::get('uid'), 'status'=>1])
            ->count();
        if ($obj['user_id'] == Session::get('uid'))
            $obj['is_sub'] = 1;
        else
            $obj['is_sub'] = UserSubModel::where(['uid'=>Session::get('uid'), 'sub_uid'=>$obj['user_id'], 'status'=>1])
                ->count();
        return $obj;
    }


    public static function delOneMoment($mid)
    {
        //删除这个说说
        $uid = Session::get('uid');
        $flight = MomentModel::get($mid);
        if ($flight->user_id != $uid) {
            return false;
        }
        $flight->status = 2;
        $flight->save();
        return true;
    }



    //获取某个用户最新的说说的第一张图片,没有说说则显示头像
    public static function getNewImg($uid)
    {
        $find = MomentModel::where(['user_id' => $uid, 'status' => 1])
            ->order('add_ts desc')
            ->find();

        if (!$find) {
            $user = UserModel::get($uid);
            return $user['header_img'];
        } else {
            $data =substr(stripslashes($find['img']), 1, -1);
            $data = substr(explode(',', $data)[0], 1, -1);
            return $data;
        }
    }



    //设置说说可见性
    public static function setSee($mid, $see) {
        $flight = MomentModel::get($mid);
        if ($see == 1 || $see == 0) {
            $flight->see = $see;
            $flight->save();
            return true;
        }

        return false;
    }


    //获取某条说说的所有详细评论
    public static function getComments()
    {
        
    }

//    /**
//     * 获取一条数据信息
//     * @param array $condition
//     * @param bool  $is_cache
//     * @return array|false|\PDOStatement|string|Model
//     */
//    public function getOneInfo($condition=[],$is_cache=false){
//
//        $this->alias('moment')
//            ->field('moment.*,user.user_name');
//        $join = [
//            ['user user', 'user.user_no=moment.user_no', 'LEFT'],
//        ];
//        if($condition){
//            return $this->where($condition)->join($join)->cache($is_cache,60)->find();
////           echo $this->getLastSql();exit;
//        }
//        return $this->join($join)->cache($is_cache)->find();
//
//    }


//    public function getComment($condition=[]){
//        if($condition){
//            $this->where($condition);
//        }
//        return $this->alias('comment')
//            ->field('comment.*,store.store_name,store.discount,project.project_name,user.header_img')
//            ->join('store store','store.store_id = comment.store_id','LEFT')
//            ->join('project project','project.project_id = comment.project_id','LEFT')
//            ->join('user user','user.user_no = comment.user_no','LEFT')
//            ->order('comment.add_ts desc')
//            ->select();
//    }
//
//    public function getCommentCount($condition=[]){
//        if($condition){
//            $this->where($condition);
//        }
//        return $this->alias('comment')
//            ->field('comment.*,store.store_name,store.discount,project.project_name,user.header_img')
//            ->join('store store','store.store_id = comment.store_id','LEFT')
//            ->join('project project','project.project_id = comment.project_id','LEFT')
//            ->join('user user','user.user_no = comment.user_no','LEFT')
//            ->order('comment.add_ts desc')
//            ->count();
//    }
}
